// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Category {
  id Int @id @default(autoincrement())
  name String
  slug String?
  imageUrl String?
  foods Food[]
}

model Food {
  id Int @id @default(autoincrement())
  name String
  ingredients String?
  price Decimal
  categoryId Int?
  category Category? @relation(references: [id],fields: [categoryId])
  orderDetails order_detail[]
}

model user {
  id Int @id @default(autoincrement())
  firstname String
  lastname String
  email String @unique
  verified Boolean @default(false)
  activationToken String?
  resetToken String?
  passwordHash String
  role String @default("customer")
  orders order[]
}

model setting {
  id Int @id @default(autoincrement())
  siteTitle String
  siteSubtitle String
  shippingCosts Decimal
  orderStatePaidId Int? @unique
  orderStateCreatedId Int? @unique
  orderStatePaid order_state?  @relation("order_state_paid_relation",fields: [orderStatePaidId],references: [id])
  orderStateCreated order_state? @relation("order_state_created_relation",fields: [orderStateCreatedId],references: [id])
}
model order_state {
  id Int @id @default(autoincrement())
  name String
  cssBadgeClass String?
  orders order[]
  settingOrderStatePaid setting? @relation("order_state_paid_relation")
  settingOrderStateCreated setting? @relation("order_state_created_relation")
}

model order {
  id Int @id @default(autoincrement())
  orderStateId Int?
  orderState order_state? @relation(fields: [orderStateId],references: [id])
  userId Int
  user user @relation(fields: [userId],references: [id])
  isPaid Boolean @default(false)
  shippingReequired Boolean @default(false)
  shippingCosts Decimal @default(0.00)
  shippingAddress String?
  shippingDeliveryTime String?
  notes String?
  details order_detail[]
  total Decimal @default(0.00)
}

model order_detail {
  id Int @id @default(autoincrement())
  orderId Int
  order order @relation(fields: [orderId],references: [id],onDelete: Cascade)
  foodId Int?
  food Food? @relation(fields: [foodId],references: [id],onDelete: SetNull)
  quantity Int
  unitPrice Decimal
  name String
}
