// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id       Int     @id @default(autoincrement())
  name     String
  slug     String?
  imageUrl String?
  foods    Food[]
  deleted  Boolean @default(false)
}

model Food {
  id          Int       @id @default(autoincrement())
  name        String
  ingredients String?
  price       Decimal
  categoryId  Int?
  category    Category? @relation(references: [id], fields: [categoryId])
  deleted     Boolean   @default(false)
}

model User {
  id              Int     @id @default(autoincrement())
  firstname       String
  lastname        String
  email           String  @unique
  verified        Boolean @default(false)
  activationToken String?
  resetToken      String?
  passwordHash    String
  role            String  @default("customer")
  orders          Order[]
}

model Setting {
  id                  Int          @id @default(autoincrement())
  siteTitle           String
  siteSubtitle        String?
  orderStatePaidId    Int          @unique
  orderStateCreatedId Int          @unique
  orderStateDeletedId Int          @unique
  orderStatePaid      OrderState   @relation("order_state_paid_relation", fields: [orderStatePaidId], references: [id])
  orderStateCreated   OrderState   @relation("order_state_created_relation", fields: [orderStateCreatedId], references: [id])
  orderStateDeleted   OrderState   @relation("order_state_deleted_relation", fields: [orderStateDeletedId], references: [id])
  order_state         OrderState[]
}

model OrderState {
  id                       Int      @id @default(autoincrement())
  name                     String
  cssBadgeClass            String?
  orders                   Order[]
  settingOrderStatePaid    Setting? @relation("order_state_paid_relation")
  settingOrderStateCreated Setting? @relation("order_state_created_relation")
  settingOrderStateDeleted Setting? @relation("order_state_deleted_relation")
  setting                  Setting? @relation(fields: [settingId], references: [id])
  settingId                Int?
  deleted                  Boolean  @default(false)
}

model Order {
  id                   Int           @id @default(autoincrement())
  orderStateId         Int?
  orderState           OrderState?   @relation(fields: [orderStateId], references: [id])
  userId               Int
  user                 User          @relation(fields: [userId], references: [id])
  isPaid               Boolean       @default(false)
  shippingAddress      String?
  shippingDeliveryTime String?
  notes                String?
  details              OrderDetail[]
  total                Decimal       @default(0.00)
  carrierId            Int?
  carrier              Carrier?      @relation(fields: [carrierId], references: [id])
  deleted              Boolean       @default(false)
}

model OrderDetail {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  quantity  Int
  unitPrice Decimal
  name      String
}

model Carrier {
  id      Int     @id @default(autoincrement())
  name    String
  costs   Decimal
  orders  Order[]
  deleted Boolean @default(false)
}
