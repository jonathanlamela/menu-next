// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model category {
  id       Int     @id @default(autoincrement())
  name     String
  slug     String?
  imageUrl String?
  foods    food[]
  deleted  Boolean @default(false)
}

model food {
  id           Int            @id @default(autoincrement())
  name         String
  ingredients  String?
  price        Decimal
  categoryId   Int?
  category     category?      @relation(references: [id], fields: [categoryId])
  orderDetails order_detail[]
  deleted      Boolean        @default(false)
}

model user {
  id              Int     @id @default(autoincrement())
  firstname       String
  lastname        String
  email           String  @unique
  verified        Boolean @default(false)
  activationToken String?
  resetToken      String?
  passwordHash    String
  role            String  @default("customer")
  orders          order[]
}

model setting {
  id                  Int           @id @default(autoincrement())
  siteTitle           String
  siteSubtitle        String
  orderStatePaidId    Int?          @unique
  orderStateCreatedId Int?          @unique
  orderStateDeletedId Int?          @unique
  orderStatePaid      order_state?  @relation("order_state_paid_relation", fields: [orderStatePaidId], references: [id])
  orderStateCreated   order_state?  @relation("order_state_created_relation", fields: [orderStateCreatedId], references: [id])
  orderStateDeleted   order_state?  @relation("order_state_deleted_relation", fields: [orderStateDeletedId], references: [id])
  order_state         order_state[]
}

model order_state {
  id                       Int      @id @default(autoincrement())
  name                     String
  cssBadgeClass            String?
  orders                   order[]
  settingOrderStatePaid    setting? @relation("order_state_paid_relation")
  settingOrderStateCreated setting? @relation("order_state_created_relation")
  settingOrderStateDeleted setting? @relation("order_state_deleted_relation")
  setting                  setting? @relation(fields: [settingId], references: [id])
  settingId                Int?
  deleted                  Boolean  @default(false)
}

model order {
  id                   Int            @id @default(autoincrement())
  orderStateId         Int?
  orderState           order_state?   @relation(fields: [orderStateId], references: [id])
  userId               Int
  user                 user           @relation(fields: [userId], references: [id])
  isPaid               Boolean        @default(false)
  shippingAddress      String?
  shippingDeliveryTime String?
  notes                String?
  details              order_detail[]
  total                Decimal        @default(0.00)
  carrierId            Int?
  carrier              carrier?       @relation(fields: [carrierId], references: [id])
  deleted              Boolean        @default(false)
}

model order_detail {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  foodId    Int?
  food      food?   @relation(fields: [foodId], references: [id], onDelete: SetNull)
  quantity  Int
  unitPrice Decimal
  name      String
}

model carrier {
  id      Int     @id @default(autoincrement())
  name    String
  costs   Decimal
  orders  order[]
  deleted Boolean @default(false)
}
